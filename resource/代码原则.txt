1.
2.
3.
4.函数的功能要相对的独立。
5.自己实现的函数容错性要好，尽量保证对外部调用没有影响。
6.自己实现的函数对于输入和输出参数要做正确性验证。
7.对系统函数返回值要进行处理。
8.我自己创建的所有函数 正确返回1，错误返回0或其他标志（2， 3，4....）。
9.函数名字尽量贴切当前模块的内容。
10.返回值的错误提醒具体内容显示，需要可配置。例如：#define XXX_ERR ("12345");
11.对于本模块申请的系统资源，需要在本模块及时的释放或者提供相应的释放函数释放。
12.对于每一个队列，我们需要使用其自带的信号进行互斥操作。
13.对于中文和英文的兼容性处理。
14.所有模块的全局变量全部使用结构体封装。不使用#define，所有变量可配置。
15.模块之间的耦合性尽量小。
16.基础构建全部使用系统内存分配。



服务器改进
1.后台运行
2.对服务器进行运行和停止和重启（共享内存）。
3.密码加密。
4.内存池。


内存池设计方案

1.初始化申请空间 
200 M + 索引表大小 + 链表大小

2.分配方式


3.申请内存 
必须为8的整数倍，做多可以申请2048B。
2048 / 4 = 512 + 3 索引表
索引表结构体
{
	空间大小
	空间链表头指针
}

空间链表结构体
{
	空间起始地址
	空间大小
}

4.申请特殊状况
1.超过2048 使用系统申请。
2.等于0 返回空
3.查找的对应空间没有空闲空间
	1.从下一个列表空间寻找合适的并分割，返回合适的。
	2.如果下一个没有空闲的，从系统分配当前空间大小。

5.释放空间
释放建立索引表
索引按照地址大小索引。





